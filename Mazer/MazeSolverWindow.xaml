<Window x:Class="Mazer.MazeSolverWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:Mazer.Converters"
        Title="MazeSolverWindow" Height="800" Width="1024">
    <Window.Resources>
        <ResourceDictionary>
            <converters:HalfValueConverter x:Key="MyHalfValueConverter"/>
            <converters:RectConverter x:Key="MyRectConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Background="LightGreen">
        <Grid.Resources>
            <ResourceDictionary>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="4,4,4,0"/>
                    <Setter Property="Padding" Value="8"/>
                </Style>
            </ResourceDictionary>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Border BorderBrush="Black" BorderThickness="1" Grid.RowSpan="2" Margin="4,4,2,4">
            <ScrollViewer>
                <StackPanel Background="MintCream" >
                    <TextBlock Text="MAZER - Solver" FontSize="18" FontWeight="SemiBold"  TextWrapping="WrapWithOverflow" HorizontalAlignment="Center" Margin="0,8,0,4"/>
                    <TextBlock Text="{Binding AlgorithimLabel}" HorizontalAlignment="Left" Margin="16,4,0,0" VerticalAlignment="Top" Width="164" FontWeight="Bold" Height="14" Foreground="#FF0331FF" FontSize="10"/>
                    <StackPanel Margin="8">
                        <TextBlock Text="Algorithm Comparer" HorizontalAlignment="Center" Margin="1"/>
                        <ListBox Height="131">
                            <CheckBox x:Name="AStarBox" Content="A*" />
                            <CheckBox x:Name="BinaryTreeBox" Content="Binary Tree" />
                            <CheckBox x:Name="DrunkardsWalkBox" Content="Drunkard's Walk" />
                            <CheckBox x:Name="HuntandKillBox" Content="Hunt and Kill" />
                            <CheckBox x:Name="KruskalsBox" Content="Kruskals" />
                            <CheckBox x:Name="PrimsBox" Content="Prims"/>
                            <CheckBox x:Name="RecursiveBackTrackerBox" Content="Recursive Back Tracker" />
                            <CheckBox x:Name="RecursiveDivisionBox" Content="Recursive Division"/>
                            <CheckBox x:Name="SidewinderBox" Content="Sidewinder"/>
                            <CheckBox x:Name="SimpleRectangleBox" Content="Simple Rectangle" />
                            <CheckBox x:Name="LeftWallFollowerBox" Content="LeftWallFollowerBox" />
                            <CheckBox x:Name="RightWallFollowerBox" Content="RightWallFollower" />
                            <CheckBox x:Name="WilsonsAlgorithmBox" Content="Wilsons" />
                        </ListBox>
                    </StackPanel>
                    <Button x:Name="btnOpenMaze" Content="Open Maze..." Click="btnOpenMaze_Click"/>
                    <Button x:Name="btnSolve" Content="Solve" Click="btnSolve_Click"/>
                    <Button x:Name="btnSaveAsMaz" Content="Save As (.maz)" />
                    <Button x:Name="btnSaveImage" Content="Save Image (.png)" Click="btnSaveImage_Click"/>
                    <Button x:Name="btnSaveResults" Content="Show Results Histogram" Click="btnSaveResults_Click"/>
                    <Button x:Name="btnBack" Content="Back" Click="btnBack_Click"/>
                    <StackPanel>
                        <Grid>
                            <Label Content="Wall Thickness:" Margin="16,3,0,3" Height="26"/>
                            <TextBox x:Name="txtWallThickness" Text="{Binding Value, ElementName=sldWallThickness, Mode=TwoWay}" HorizontalAlignment="Center" Margin="111,7,41,3" />
                        </Grid>
                        <Slider x:Name="sldWallThickness" VerticalAlignment="Center" Margin="20,5,20,5" Minimum="1" Maximum="20" SmallChange="1" LargeChange="5" TickFrequency="1" IsSnapToTickEnabled="True" Value="{Binding WallThickness}"/>
                    </StackPanel>
                    <StackPanel>
                        <Grid>
                            <Label Content="Delay (ms):" Margin="16,3,80,3" Height="26"/>
                            <TextBox x:Name="txtDelay" Text="{Binding Value, ElementName=sldDelay, Mode=TwoWay}" HorizontalAlignment="Center" Margin="100,7,60,3"/>
                        </Grid>
                        <Slider x:Name="sldDelay" VerticalAlignment="Center" Margin="20,5,20,5" Minimum="0" Maximum="2000" SmallChange="10" LargeChange="50" TickFrequency="1" IsSnapToTickEnabled="True" Value="{Binding Delay}"/>
                    </StackPanel>
                    <Label Content="Zoom:" Margin="16,3,80,3"/>
                    <Slider x:Name="sldZoom" Minimum="1" Maximum="4" Value="{Binding MouseWheel}" Margin="20,5,20,5"/>
                    <CheckBox x:Name="hideHighlightBox" Content="Hide Highlight" Margin="16,4,0,0"  IsChecked="{Binding HideHighlightSelected}"/>
                    <CheckBox x:Name="hideGridLinesBox" Content="Hide Grid Lines" Margin="16,4,0,0"  IsChecked="{Binding HideGridLinesSelected}"/>
                    <Button Content="Gather PW" x:Name="btnDeadEnds" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Width="75" Grid.Row="1" Click="btnDeadEnds_Click" Visibility="Hidden"/>
                    <StackPanel>
                        <!--<Label Content="Start (x,y)" Margin="3,3,110,3"/>-->
                        <TextBox x:Name="solverStartCoordinate" Text="Start x,y"   Margin="3,3,3,3" Width="60" />
                        <!--<Label Content="Start (x,y)"/>-->
                        <TextBox x:Name="solverEndCoordinate" Text="End x,y" Margin="3" Width="60" />
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Border>

        <Border x:Name="CanvasBorder" BorderBrush="Black" BorderThickness="1" Grid.Column="1" Margin="2,4,4,2">
            <Border.Clip>
                <RectangleGeometry>
                    <RectangleGeometry.Rect>
                        <MultiBinding Converter="{StaticResource MyRectConverter}">
                            <Binding ElementName="CanvasBorder" Path="ActualWidth"/>
                            <Binding ElementName="CanvasBorder" Path="ActualHeight"/>
                        </MultiBinding>
                    </RectangleGeometry.Rect>
                </RectangleGeometry>
            </Border.Clip>

            <ContentPresenter RenderTransformOrigin="0.5,0.5">
                <ContentPresenter.RenderTransform>
                    <ScaleTransform ScaleX="{Binding Path=Value, ElementName=sldZoom}" ScaleY="{Binding Path=Value, ElementName=sldZoom}"/>
                </ContentPresenter.RenderTransform>

                <ContentPresenter.Content>

                    <Canvas x:Name="solverCanvas" Background="AliceBlue" ClipToBounds="True"  MouseWheel="SolverCanvas_MouseWheel">
                        <Path x:Name="GuidePath" Data="{Binding GuidePathData}" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeThickness="1" Stroke="Red" StrokeDashArray="4 4" SnapsToDevicePixels="True">
                            <Canvas.Left>
                                <MultiBinding Converter="{StaticResource MyHalfValueConverter}">
                                    <Binding ElementName="solverCanvas" Path="ActualWidth"/>
                                    <Binding ElementName="GuidePath" Path="ActualWidth"/>
                                </MultiBinding>
                            </Canvas.Left>
                            <Canvas.Top>
                                <MultiBinding Converter="{StaticResource MyHalfValueConverter}">
                                    <Binding ElementName="solverCanvas" Path="ActualHeight"/>
                                    <Binding ElementName="GuidePath" Path="ActualHeight"/>
                                </MultiBinding>
                            </Canvas.Top>
                        </Path>
                        <Path x:Name="HighlightPath" Data="{Binding HighlightPathData}" Fill="Purple" Opacity="0.4" SnapsToDevicePixels="True">
                            <Canvas.Left>
                                <MultiBinding Converter="{StaticResource MyHalfValueConverter}">
                                    <Binding ElementName="solverCanvas" Path="ActualWidth"/>
                                    <Binding ElementName="GuidePath" Path="ActualWidth"/>
                                </MultiBinding>
                            </Canvas.Left>
                            <Canvas.Top>
                                <MultiBinding Converter="{StaticResource MyHalfValueConverter}">
                                    <Binding ElementName="solverCanvas" Path="ActualHeight"/>
                                    <Binding ElementName="GuidePath" Path="ActualHeight"/>
                                </MultiBinding>
                            </Canvas.Top>
                        </Path>
                        <Path x:Name="MazePath" Data="{Binding MazePathData}" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeThickness="{Binding WallThickness}" Stroke="Black" SnapsToDevicePixels="True">
                            <Canvas.Left>
                                <MultiBinding Converter="{StaticResource MyHalfValueConverter}">
                                    <Binding ElementName="solverCanvas" Path="ActualWidth"/>
                                    <Binding ElementName="GuidePath" Path="ActualWidth"/>
                                </MultiBinding>
                            </Canvas.Left>
                            <Canvas.Top>
                                <MultiBinding Converter="{StaticResource MyHalfValueConverter}">
                                    <Binding ElementName="solverCanvas" Path="ActualHeight"/>
                                    <Binding ElementName="GuidePath" Path="ActualHeight"/>
                                </MultiBinding>
                            </Canvas.Top>
                        </Path>
                        <Path x:Name="RoutePath" Data="{Binding RoutePathData}" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeThickness="4" Stroke="Green" SnapsToDevicePixels="True">
                            <Canvas.Left>
                                <MultiBinding Converter="{StaticResource MyHalfValueConverter}">
                                    <Binding ElementName="solverCanvas" Path="ActualWidth"/>
                                    <Binding ElementName="GuidePath" Path="ActualWidth"/>
                                </MultiBinding>
                            </Canvas.Left>
                            <Canvas.Top>
                                <MultiBinding Converter="{StaticResource MyHalfValueConverter}">
                                    <Binding ElementName="solverCanvas" Path="ActualHeight"/>
                                    <Binding ElementName="GuidePath" Path="ActualHeight"/>
                                </MultiBinding>
                            </Canvas.Top>
                        </Path>
                    </Canvas>
                </ContentPresenter.Content>
            </ContentPresenter>
        </Border>

        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="1" Grid.Column="1" Margin="2,0,4,4">
            <DataGrid x:Name="dataGrid" ItemsSource="{Binding AlgorithmMetricCollection}" AutoGenerateColumns="False" Margin="0,2,0,0" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" MouseLeftButtonDown="Row_ClickedSolver" CanUserSortColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn  Header="Algorithm" Binding="{Binding AlgorithmName}"  />
                    <DataGridTextColumn  Header="Time Taken" Binding="{Binding TimeSpan, StringFormat={}{0:hh':'mm':'ss'.'ffff}}" />
                    <DataGridTextColumn  Header="Time Taken (ms)" Binding="{Binding ElapsedMilliseconds}" />
                </DataGrid.Columns>
            </DataGrid>
        </Border>
    </Grid>
</Window>
